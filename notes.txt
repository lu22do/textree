textr.ee
forest
text graph

inspired by
- https://github.com/thomasdavis/backbonetutorials/tree/gh-pages/examples/nodejs-mongodb-mongoose-restify
- SocialNetwork

Node debugging (& jade debugging?)
Try restify
Try jeoman
Setup in nodejitsu
Need WYSWYG for html

jquery cheat sheet:
-------------------
$(document).ready(function() {
    $('div').mouseenter(function() {
        $(this).fadeTo('fast', 1);
    });
    $('div').mouseleave(function() {
        $(this).fadeTo('fast', 0.25);
    });
})

mongolab
--------
nodejitsu_lu22do / naniwila1

textree db access:
mongodb://nodejitsu_lu22do:a7h73dr9eqgqr1bvsl9e1du63q@ds061558.mongolab.com:61558/nodejitsu_lu22do_nodejitsudb8073304907


terminal setup
--------------
node --debug app.js 
mongod
mongo
node-inspector --web-port=8081 &
./node_modules/mocha/bin/mocha -R tap

git cheat sheet 
---------------
status / diff
add
commit -a -m ‘xxxx’
push origin master (see below for publication)
push heroku master
git remote
git remote show xxx

branches:
create: 
 git branch <branch>
switch to: 
 git checkout <branch> 
merge:
 git checkout master
 git merge <branch>
delete:
 git branch -d <branch>

publication
-----------
grunt build
git add
git commit -a -m ‘xxxx’
grunt push

npm cheat sheet
---------------
npm init
npm install <module> --save/--saveDep

server:
-------
nodejs
mongodb
mongoose
express
jade
cookie

client:
-------
backbone js - MVC framework
underscore js - utility lib for js
require js - depency and AMD file loading
jquery - utility lib for dom

NODE_ENV=production node app -> use optimized version (excluding require.js)

security
--------


loading
-------
index.jade -> require.js -> boot.js -> libs & Textree.js -> router.js -> views & models -> TextreeView.js (base view class)

backbone issue
--------------
why can't load a model which include a collection (of children)?
why need 2 REST call?

views
-----

TextreeView
	addcontactView
	contactsView
	indexView
	profileView
	statusView
forgotpasswordView
loginView
registerView

abstractions
------------
a tree has nodes and branches (edges)
nodes has a set of branches
a branch is a piece of text (potentially with comments)

apis
----
get
/accounts/:id
/accounts/:id/activity
/accounts/:id/contacts
/accounts/:id/trees
/trees/:id
/branches/:id
(/branches/:id/details) -> /branches/:id/children

post
/register
/login
/logout
/forgotPassword
/resetPassword
/accounts/:id/contact
/contacts/find
/trees
/branches

delete
/accounts/:id/contact

Test cases
----------
check that you cannot delete someone else's tree
check reset passwd

history
-------





Requirements
------------
Version 0.1 (pre-alpha deploy in house for first feedback):
- One tree is made of branches (= piece of text)
- One user has a set of contacts
- It is possible to see one user’s activity
- Search for user 
- On Git
- Branch like
- Ant build script: jslint, combine, grunt, ...

Version 0.2 (put online, very restricted):
- bootstrap & somewhat responsive
- advanced text edit, with edit button
- complete tree on one page (with way to switch branches)

Version 0.2.5:
- logging
- REST API unit tests
- UI unit tests

Version 0.3 (more open):
- Add about
- Privileges: One tree is owned/managed by one user - his contact can create branches
- Define ergoflow/style rules and use them consistently
- Optimize: 
  - minimize view creation & server requests
  - do not send password and other unneeded info
- Logs
- Robustify server
- Admin UI to monitor server activity & db
- More NPM modules?
- Support request for adding friends (sending email)
- Support email for passord retrieval
- display children branch name and author (embed child branch info in response)
- prevent others to edit owner’s branch
- allow contact to create branch
- delete branch 
- delete branches when deleting tree

Later:
- Tree superview - Zoomable tree rendered on the right side (a bit like sublime) / 3D views
- Permissions on tree (owner decides if the tree’s read/write access are open, restricted or private)
- Search for tree
- UI internationalization (en, fr, jp) 
- Chat support
- Dynamic event (socket.io) from server
- Support comments (hidden by default)
- Unit tests, esp. for heavy load and perf testing (ie for db access optimization)
- Work on ipad (touch event), responsive
- Color trails (color some branch on demand or by author)
- Email notifications on specific changes (eg branch add to your tree) or simply site update
- database backup, security
- ... 

------------

In progress:
- full tree loaded & not textedit enabled by default (smooth reading experience)
- show branches small menu (“+” to add new branch) 
- text edit with edit button

Todo:


Todo then:
- support graph rather than tree
- upgrade to latest libs / update package.json
- backup/restore mongo, sanity check
- full text editor (outputs in html) - using jqueryte (rather than bootstrap-wysihtml5)
- when changing branch: flip
- facebook login
- REST API unit tests —> add to grunt? Makefile?
- UI unit test plan
- use jquery ajax promise
- support browsing without logging in
- analytics
- Footer with about & help
- Details on a tree: submit -> save, enter should submit
- Fix activity when edit tree field
- remove box when not editing, make it the size of the screen
- error message on 404 (branch, tree)
- support server upgrade without relogging
- mocha/zombie unit tests 
- internationalization js
- restify?
- sass, less
- hapi, promise
- good logging system e.g. logfmt, bunyan

Done textree:
- Start from Social network
- Remove Status
- Installed grunt in textree, configured it to run jshint
- confirmation popup to delete tree
- display logged user
- contact full name
- for a contact: do not show change password & contacts (do not send them)
- customize my tree for contact’s trees
- Add version & favicon
- put on nodejitsu
- requirejs optimization + uglify for production
- Using modern form look
- Simplified register form
- Remove first/last name, just full name
- Added button to change name
- Make all content centered
- Pre-fill Login after Signup
- Check for already existing account (pseudo, mail) on signup
- Remember email address
- Do not allow to change contact’s name
- Support empty branch name
- Remove addnewtree from top bar & “Add new tree” button in “my trees”
- After creating a tree, go directly to root branch
- using bootstrap 
- using connect-mongo (instead of MemoryStore) to store sessions in Mongodb
- prevent other to delete tree they don't own
- click on title to jump to beginning
- author name not part of link
- increase branch name field
- remove logs
- about & help pages

Done learning/setup:
- Installed jshint plugin in Sublime, configured it
- Installed jeoman - yo, bower, grunt
	launch some generator with yo
- livereload setup
- Used node-inpector
  node-inspector --web-port=8081 &
  node —debug xxx
  in browser: http://127.0.0.1:8081/debug?port=5858
- installed concat & uglify in grunt
- did requirejs optimization

